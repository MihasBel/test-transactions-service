// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/MihasBel/test-transactions-service/models"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// GetTransactionByID mocks base method.
func (m *MockStorage) GetTransactionByID(ctx context.Context, id uuid.UUID) (models.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionByID", ctx, id)
	ret0, _ := ret[0].(models.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionByID indicates an expected call of GetTransactionByID.
func (mr *MockStorageMockRecorder) GetTransactionByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionByID", reflect.TypeOf((*MockStorage)(nil).GetTransactionByID), ctx, id)
}

// PlaceTransaction mocks base method.
func (m *MockStorage) PlaceTransaction(ctx context.Context, transaction models.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PlaceTransaction", ctx, transaction)
	ret0, _ := ret[0].(error)
	return ret0
}

// PlaceTransaction indicates an expected call of PlaceTransaction.
func (mr *MockStorageMockRecorder) PlaceTransaction(ctx, transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PlaceTransaction", reflect.TypeOf((*MockStorage)(nil).PlaceTransaction), ctx, transaction)
}
